{"version":3,"sources":["Generic.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,kBAAqB,GAAM;IACvB,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AAED,IAAI,UAAU,GAAqB,QAAQ,CAAC;AAS5C,yBAA+C,GAAM;IACjD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAE,0DAA0D;IACpF,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AAKD,qBAA2C,GAAM,EAAE,GAAM;IACrD,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC;AAED,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEnC,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO;AAC5B,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,yEAAyE;AAO9F;IAAA;IAEA,CAAC;IAAD,gBAAC;AAAD,CAFA,AAEC,IAAA;AAED;IAAA;IAEA,CAAC;IAAD,gBAAC;AAAD,CAFA,AAEC,IAAA;AAED;IAAA;IAEA,CAAC;IAAD,aAAC;AAAD,CAFA,AAEC,IAAA;AAED;IAAkB,uBAAM;IAAxB;;IAEA,CAAC;IAAD,UAAC;AAAD,CAFA,AAEC,CAFiB,MAAM,GAEvB;AAED;IAAmB,wBAAM;IAAzB;;IAEA,CAAC;IAAD,WAAC;AAAD,CAFA,AAEC,CAFkB,MAAM,GAExB;AAED,wBAA0C,CAAc;IACpD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;AACnB,CAAC;AAED,cAAc,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAE,cAAc;AACpD,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAG,cAAc","file":"Generic.js","sourcesContent":["function identity<T>(arg: T): T {\r\n    return arg;\r\n}\r\n\r\nlet myIdentity: <T>(arg: T) => T = identity;\r\n\r\n\r\n\r\n\r\ninterface Lengthwise {\r\n    length: number;\r\n}\r\n\r\nfunction loggingIdentity<T extends Lengthwise>(arg: T): T {\r\n    console.log(arg.length);  // Now we know it has a .length property, so no more error\r\n    return arg;\r\n}\r\n\r\n\r\n\r\n\r\nfunction getProperty<T, K extends keyof T>(obj: T, key: K) {\r\n    return obj[key];\r\n}\r\n\r\nlet x = { a: 1, b: 2, c: 3, d: 4 };\r\n\r\ngetProperty(x, \"a\"); // okay\r\ngetProperty(x, \"m\"); // error: Argument of type 'm' isn't assignable to 'a' | 'b' | 'c' | 'd'.\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass BeeKeeper {\r\n    hasMask: boolean;\r\n}\r\n\r\nclass ZooKeeper {\r\n    nametag: string;\r\n}\r\n\r\nclass Animal {\r\n    numLegs: number;\r\n}\r\n\r\nclass Bee extends Animal {\r\n    keeper: BeeKeeper;\r\n}\r\n\r\nclass Lion extends Animal {\r\n    keeper: ZooKeeper;\r\n}\r\n\r\nfunction createInstance<A extends Animal>(c: new () => A): A {\r\n    return new c();\r\n}\r\n\r\ncreateInstance(Lion).keeper.nametag;  // typechecks!\r\ncreateInstance(Bee).keeper.hasMask;   // typechecks!"],"sourceRoot":"/source/"}