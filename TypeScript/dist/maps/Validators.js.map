{"version":3,"sources":["Validators.ts"],"names":[],"mappings":";AAIA,IAAI,aAAa,GAAG,aAAa,CAAC;AAClC,IAAI,YAAY,GAAG,UAAU,CAAC;AAE9B;IAAA;IAIA,CAAC;IAHG,2CAAY,GAAZ,UAAa,CAAS;QAClB,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IACL,2BAAC;AAAD,CAJA,AAIC,IAAA;AAED;IAAA;IAIA,CAAC;IAHG,uCAAY,GAAZ,UAAa,CAAS;QAClB,MAAM,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IACL,uBAAC;AAAD,CAJA,AAIC,IAAA;AAED,sBAAsB;AACtB,IAAI,OAAO,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAExC,qBAAqB;AACrB,IAAI,UAAU,GAAsC,EAAE,CAAC;AACvD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAChD,UAAU,CAAC,cAAc,CAAC,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAExD,iDAAiD;AACjD,GAAG,CAAC,CAAU,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;IAAhB,IAAI,CAAC,gBAAA;IACN,GAAG,CAAC,CAAC,IAAI,MAAI,IAAI,UAAU,CAAC,CAAC,CAAC;QAC1B,IAAI,OAAO,GAAG,UAAU,CAAC,MAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,WAAO,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,gBAAgB,WAAO,MAAI,OAAK,CAAC,CAAC;IACrF,CAAC;CACJ","file":"Validators.js","sourcesContent":["interface StringValidator {\r\n    isAcceptable(s: string): boolean;\r\n}\r\n\r\nlet lettersRegexp = /^[A-Za-z]+$/;\r\nlet numberRegexp = /^[0-9]+$/;\r\n\r\nclass LettersOnlyValidator implements StringValidator {\r\n    isAcceptable(s: string) {\r\n        return lettersRegexp.test(s);\r\n    }\r\n}\r\n\r\nclass ZipCodeValidator implements StringValidator {\r\n    isAcceptable(s: string) {\r\n        return s.length === 5 && numberRegexp.test(s);\r\n    }\r\n}\r\n\r\n// Some samples to try\r\nlet strings = [\"Hello\", \"98052\", \"101\"];\r\n\r\n// Validators to use \r\nlet validators: { [s: string]: StringValidator; } = {};\r\nvalidators[\"ZIP code\"] = new ZipCodeValidator();\r\nvalidators[\"Letters only\"] = new LettersOnlyValidator();\r\n\r\n// Show whether each string passed each validator\r\nfor (let s of strings) {\r\n    for (let name in validators) {\r\n        let isMatch = validators[name].isAcceptable(s);\r\n        console.log(`'${ s }' ${ isMatch ? \"matches\" : \"does not match\" } '${ name }'.`);\r\n    }\r\n}"],"sourceRoot":"/source/"}