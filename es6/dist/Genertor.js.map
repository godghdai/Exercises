{"version":3,"sources":["../src/Genertor.js"],"names":["tell","k","console","log","next","obj","value","state","status"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACE;AACA,MAAIA,+CAAK,SAALA,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD,GADC;;AAAA;AAAA;AAAA,mBAED,GAFC;;AAAA;AAAA,6CAGA,GAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAALA,IAAK;AAAA,GAAL,CAAJ;;AAMA,MAAIC,IAAED,MAAN;;AAEAE,UAAQC,GAAR,CAAYF,EAAEG,IAAF,EAAZ;AACAF,UAAQC,GAAR,CAAYF,EAAEG,IAAF,EAAZ;AACAF,UAAQC,GAAR,CAAYF,EAAEG,IAAF,EAAZ;AACAF,UAAQC,GAAR,CAAYF,EAAEG,IAAF,EAAZ;AACD;;AAED;AACE,MAAIC,MAAI,EAAR;AACAA,oEAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACb,CADa;;AAAA;AAAA;AAAA,mBAEb,CAFa;;AAAA;AAAA;AAAA,mBAGb,CAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAFF;AAAA;AAAA;;AAAA;AAQE,oDAAiBA,GAAjB,4GAAqB;AAAA,UAAbC,KAAa;;AACnBJ,cAAQC,GAAR,CAAY,OAAZ,EAAoBG,KAApB;AACD;AAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWC;;AAED;AACE,MAAIC,gDAAM,SAANA,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA,iBACF,CADE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEA,GAFA;;AAAA;AAAA;AAAA,mBAGA,GAHA;;AAAA;AAAA;AAAA,mBAIA,GAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAANA,KAAM;AAAA,GAAN,CAAJ;AAOA,MAAIC,SAAOD,OAAX;AACAL,UAAQC,GAAR,CAAYK,OAAOJ,IAAP,EAAZ;AACAF,UAAQC,GAAR,CAAYK,OAAOJ,IAAP,EAAZ;AACAF,UAAQC,GAAR,CAAYK,OAAOJ,IAAP,EAAZ;AACAF,UAAQC,GAAR,CAAYK,OAAOJ,IAAP,EAAZ;AACAF,UAAQC,GAAR,CAAYK,OAAOJ,IAAP,EAAZ;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Genertor.js","sourcesContent":["{\n  // genertaor基本定义\n  let tell=function* (){\n    yield 'a';\n    yield 'b';\n    return 'c'\n  };\n\n  let k=tell();\n\n  console.log(k.next());\n  console.log(k.next());\n  console.log(k.next());\n  console.log(k.next());\n}\n\n{\n  let obj={};\n  obj[Symbol.iterator]=function* (){\n    yield 1;\n    yield 2;\n    yield 3;\n  }\n\n  for(let value of obj){\n    console.log('value',value);\n  }\n}\n\n{\n  let state=function* (){\n    while(1){\n      yield 'A';\n      yield 'B';\n      yield 'C';\n    }\n  }\n  let status=state();\n  console.log(status.next());\n  console.log(status.next());\n  console.log(status.next());\n  console.log(status.next());\n  console.log(status.next());\n}\n\n// {\n//   let state=async function (){\n//     while(1){\n//       await 'A';\n//       await 'B';\n//       await 'C';\n//     }\n//   }\n//   let status=state();\n//   console.log(status.next());\n//   console.log(status.next());\n//   console.log(status.next());\n//   console.log(status.next());\n//   console.log(status.next());\n// }\n"]}