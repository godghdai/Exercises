{"version":3,"sources":["..\\src\\Proxy和Reflect.js"],"names":["obj","time","name","_r","monitor","Proxy","get","target","key","replace","set","value","has","deleteProperty","indexOf","ownKeys","filter","item","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACE,MAAIA,MAAI;AACNC,UAAK,YADC;AAENC,UAAK,KAFC;AAGNC,QAAG;AAHG,GAAR;;AAMA,MAAIC,UAAQ,IAAIC,KAAJ,CAAUL,GAAV,EAAc;AACxB;AACAM,OAFwB,eAEpBC,MAFoB,EAEbC,GAFa,EAET;AACb,aAAOD,OAAOC,GAAP,EAAYC,OAAZ,CAAoB,MAApB,EAA2B,MAA3B,CAAP;AACD,KAJuB;;AAKxB;AACAC,OANwB,eAMpBH,MANoB,EAMbC,GANa,EAMTG,KANS,EAMH;AACnB,UAAGH,QAAM,MAAT,EAAgB;AACd,eAAOD,OAAOC,GAAP,IAAYG,KAAnB;AACD,OAFD,MAEK;AACH,eAAOJ,OAAOC,GAAP,CAAP;AACD;AACF,KAZuB;;AAaxB;AACAI,OAdwB,eAcpBL,MAdoB,EAcbC,GAda,EAcT;AACb,UAAGA,QAAM,MAAT,EAAgB;AACd,eAAOD,OAAOC,GAAP,CAAP;AACD,OAFD,MAEK;AACH,eAAO,KAAP;AACD;AACF,KApBuB;;AAqBxB;AACAK,kBAtBwB,0BAsBTN,MAtBS,EAsBFC,GAtBE,EAsBE;AACxB,UAAGA,IAAIM,OAAJ,CAAY,GAAZ,IAAiB,CAAC,CAArB,EAAuB;AACrB,eAAOP,OAAOC,GAAP,CAAP;AACA,eAAO,IAAP;AACD,OAHD,MAGK;AACH,eAAOD,OAAOC,GAAP,CAAP;AACD;AACF,KA7BuB;;AA8BxB;AACAO,WA/BwB,mBA+BhBR,MA/BgB,EA+BT;AACb,aAAO,oBAAYA,MAAZ,EAAoBS,MAApB,CAA2B;AAAA,eAAMC,QAAM,MAAZ;AAAA,OAA3B,CAAP;AACD;AAjCuB,GAAd,CAAZ;;AAoCAC,UAAQC,GAAR,CAAY,KAAZ,EAAkBf,QAAQH,IAA1B;;AAEAG,UAAQH,IAAR,GAAa,MAAb;AACAG,UAAQF,IAAR,GAAa,UAAb;AACAgB,UAAQC,GAAR,CAAY,KAAZ,EAAkBf,QAAQH,IAA1B,EAA+BG,OAA/B;;AAEAc,UAAQC,GAAR,CAAY,KAAZ,EAAkB,UAAUf,OAA5B,EAAoC,UAAUA,OAA9C;;AAEA;AACA;AACA;AACA;AACA;AACAc,UAAQC,GAAR,CAAY,SAAZ,EAAsB,oBAAYf,OAAZ,CAAtB;AAED;;AAED;AACE,MAAIJ,OAAI;AACNC,UAAK,YADC;AAENC,UAAK,KAFC;AAGNC,QAAG;AAHG,GAAR;;AAMAe,UAAQC,GAAR,CAAY,aAAZ,EAA0B,mBAAYnB,IAAZ,EAAgB,MAAhB,CAA1B;AACA,qBAAYA,IAAZ,EAAgB,MAAhB,EAAuB,UAAvB;AACAkB,UAAQC,GAAR,CAAYnB,IAAZ;AACAkB,UAAQC,GAAR,CAAY,KAAZ,EAAkB,mBAAYnB,IAAZ,EAAgB,MAAhB,CAAlB;AACD","file":"Proxy和Reflect.js","sourcesContent":["{\n  let obj={\n    time:'2017-03-11',\n    name:'net',\n    _r:123\n  };\n\n  let monitor=new Proxy(obj,{\n    // 拦截对象属性的读取\n    get(target,key){\n      return target[key].replace('2017','2018')\n    },\n    // 拦截对象设置属性\n    set(target,key,value){\n      if(key==='name'){\n        return target[key]=value;\n      }else{\n        return target[key];\n      }\n    },\n    // 拦截key in object操作\n    has(target,key){\n      if(key==='name'){\n        return target[key]\n      }else{\n        return false;\n      }\n    },\n    // 拦截delete\n    deleteProperty(target,key){\n      if(key.indexOf('_')>-1){\n        delete target[key];\n        return true;\n      }else{\n        return target[key]\n      }\n    },\n    // 拦截Object.keys,Object.getOwnPropertySymbols,Object.getOwnPropertyNames\n    ownKeys(target){\n      return Object.keys(target).filter(item=>item!='time')\n    }\n  });\n\n  console.log('get',monitor.time);\n\n  monitor.time='2018';\n  monitor.name='mukewang';\n  console.log('set',monitor.time,monitor);\n\n  console.log('has','name' in monitor,'time' in monitor);\n\n  // delete monitor.time;\n  // console.log('delete',monitor);\n  //\n  // delete monitor._r;\n  // console.log('delete',monitor);\n  console.log('ownKeys',Object.keys(monitor));\n\n}\n\n{\n  let obj={\n    time:'2017-03-11',\n    name:'net',\n    _r:123\n  };\n\n  console.log('Reflect get',Reflect.get(obj,'time'));\n  Reflect.set(obj,'name','mukewang');\n  console.log(obj);\n  console.log('has',Reflect.has(obj,'name'));\n}\n"]}