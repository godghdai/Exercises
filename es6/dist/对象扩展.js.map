{"version":3,"sources":["..\\src\\对象扩展.js"],"names":["o","k","es5","es6","console","log","es5_method","hello","es6_method","a","es5_obj","b","es6_obj","test","key","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACE;AACA,MAAIA,IAAE,CAAN;AACA,MAAIC,IAAE,CAAN;AACA,MAAIC,MAAI;AACNF,OAAEA,CADI;AAENC,OAAEA;AAFI,GAAR;AAIA,MAAIE,MAAI;AACNH,QADM;AAENC;AAFM,GAAR;AAIAG,UAAQC,GAAR,CAAYH,GAAZ,EAAgBC,GAAhB;;AAEA,MAAIG,aAAW;AACbC,WAAM,iBAAU;AACdH,cAAQC,GAAR,CAAY,OAAZ;AACD;AAHY,GAAf;AAKA,MAAIG,aAAW;AACbD,SADa,mBACN;AACLH,cAAQC,GAAR,CAAY,OAAZ;AACD;AAHY,GAAf;AAKAD,UAAQC,GAAR,CAAYC,WAAWC,KAAX,EAAZ,EAA+BC,WAAWD,KAAX,EAA/B;AACD;;AAED;AACE;AACA,MAAIE,IAAE,GAAN;AACA,MAAIC,UAAQ;AACVD,OAAE,GADQ;AAEVE,OAAE;AAFQ,GAAZ;;AAKA,MAAIC,4CACDH,CADC,EACE,GADF,CAAJ;;AAIAL,UAAQC,GAAR,CAAYK,OAAZ,EAAoBE,OAApB;AAED;;AAED;AACE;AACAR,UAAQC,GAAR,CAAY,KAAZ,EAAkB,kBAAU,KAAV,EAAgB,KAAhB,CAAlB,EAAyC,UAAQ,KAAjD;AACAD,UAAQC,GAAR,CAAY,IAAZ,EAAiB,kBAAU,EAAV,EAAa,EAAb,CAAjB,EAAkC,OAAK,EAAvC;;AAEAD,UAAQC,GAAR,CAAY,IAAZ,EAAiB,sBAAc,EAACI,GAAE,GAAH,EAAd,EAAsB,EAACE,GAAE,GAAH,EAAtB,CAAjB;;AAEA,MAAIE,OAAK,EAACZ,GAAE,GAAH,EAAOD,GAAE,GAAT,EAAT;AAPF;AAAA;AAAA;;AAAA;AAQE,oDAAuB,uBAAea,IAAf,CAAvB,4GAA4C;AAAA;;AAAA;;AAAA,UAAnCC,GAAmC;AAAA,UAA/BC,KAA+B;;AAC1CX,cAAQC,GAAR,CAAY,CAACS,GAAD,EAAKC,KAAL,CAAZ;AACD;AAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWC;;AAED;AACE;AACA;AACA;AACA;AACA;AACA;AACD","file":"对象扩展.js","sourcesContent":["{\n  // 简洁表示法\n  let o=1;\n  let k=2;\n  let es5={\n    o:o,\n    k:k\n  };\n  let es6={\n    o,\n    k\n  };\n  console.log(es5,es6);\n\n  let es5_method={\n    hello:function(){\n      console.log('hello');\n    }\n  };\n  let es6_method={\n    hello(){\n      console.log('hello');\n    }\n  };\n  console.log(es5_method.hello(),es6_method.hello());\n}\n\n{\n  // 属性表达式\n  let a='b';\n  let es5_obj={\n    a:'c',\n    b:'c'\n  };\n\n  let es6_obj={\n    [a]:'c'\n  }\n\n  console.log(es5_obj,es6_obj);\n\n}\n\n{\n  // 新增API\n  console.log('字符串',Object.is('abc','abc'),'abc'==='abc');\n  console.log('数组',Object.is([],[]),[]===[]);\n\n  console.log('拷贝',Object.assign({a:'a'},{b:'b'}));\n\n  let test={k:123,o:456};\n  for(let [key,value] of Object.entries(test)){\n    console.log([key,value]);\n  }\n}\n\n{\n  // 扩展运算符\n  // let {a,b,...c}={a:'test',b:'kill',c:'ddd',d:'ccc'};\n  // c={\n  //   c:'ddd',\n  //   d:'ccc'\n  // }\n}\n"]}